#!/usr/bin/env python3

__author__ = 'Wei Mu'

class Solution:
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        global num_dict
        num_dict = dict()
        
        num_dict['2'] = 'abc'
        num_dict['3'] = 'def'
        num_dict['4'] = 'ghi'
        num_dict['5'] = 'jkl'
        num_dict['6'] = 'mno'
        num_dict['7'] = 'pqrs'
        num_dict['8'] = 'tuv'
        num_dict['9'] = 'wxyz'
        
        if len(digits) == 0:
            return []
        
        if len(digits) == 1:
            return(list(num_dict[digits[0]]))
        else:
            return(self.letterCombHelper(digits[0], digits[1], digits[2:]))
    
    def letterCombHelper(self, first, second, remaining):
        if remaining == '':
            ans = []
            for i in range(len(num_dict[first])):
                for j in range(len(num_dict[second])):
                    ans.append(num_dict[first][i]+num_dict[second][j])
            return ans
        
        else:
            ans = []
            for i in range(len(num_dict[first])):
                for j in self.letterCombHelper(second, remaining[0], remaining[1:]):
                    ans.append(num_dict[first][i] + j)
            return ans
