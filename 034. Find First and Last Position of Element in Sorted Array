#!/usr/bin/env python3

__author__ = 'Wei Mu'

class Solution:
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        
        if len(nums) == 0 or nums[0] > target or nums[-1] < target:
            return [-1, -1]
        if len(nums) == 1 and nums[0] == target:
            return [0,0]
        if len(nums) == 1 and nums[0] != target:
            return [-1, -1]
        
        l = 0
        r = len(nums) - 1
        
        # locate target value
        while True:
            if r - l == 1 and nums[l] != target and nums[r] != target:
                return([-1, -1])
            elif r - l == 1 and nums[l] == target and nums[r] != target:
                return([l,l])
            elif r - l == 1 and nums[r] == target and nums[l] != target:
                return([r,r])
            
            mid = (l+r)//2
            
            if nums[mid] > target:
                r = mid
            elif nums[mid] < target:
                l = mid
            elif nums[mid] == target:
                target_ind_l = target_ind_r =  mid
                break
        
        # Find left
        while True:
            if l == 0 and nums[l] == target:
                break
            elif nums[l] == target and nums[l - 1] != target:
                break
            elif nums[l+1] == target and nums[l] != target:
                l+=1
                break
            
            mid = (l + target_ind_l)//2
            
            if nums[mid] == target:
                target_ind_l = mid
            else:
                l = mid

        # Find right
        while True:
            if r == len(nums) - 1 and nums[r] == target:
                break
            elif nums[r] == target and nums[r + 1] != target:
                break
            elif nums[r-1] == target and nums[r] != target:
                r-=1
                break
            
            mid = (r + target_ind_r)//2
            
            if nums[mid] == target:
                target_ind_r = mid
            else:
                r = mid
        
        return([l, r])
