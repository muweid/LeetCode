    
#!/usr/bin/env python3

__author__ = 'Wei Mu'


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reorderList(self, head: ListNode) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        
        if not head:
            return 
        
        slow = head
        fast= head
        
        while fast!= None and fast.next != None:
            fast = fast.next.next
            slow = slow.next
        
        end_point = slow
        
        p1 = head
        p2 = slow.next
        list_p1 = []
        list_p2 = []
        
        while p1 != end_point:
            list_p1.append(p1)
            p1 = p1.next
            if p2 != None:
                list_p2.append(p2)
                p2 = p2.next
        
        while list_p1 or list_p2:
            node_1 = list_p1.pop(0)
            
            if list_p2:
                node_2 = list_p2.pop()
                node_1.next, node_2.next = node_2, node_1.next
                
            
        end_point.next = None
        
