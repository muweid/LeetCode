#!/usr/bin/env python3

__author__ = 'Wei Mu'

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if not head:
            return None
        
        start = ListNode(0)
        start.next = head
        p_candidate = head.next
        head.next = None
        
        
        while p_candidate != None:
            cur_node = p_candidate
            p_candidate = p_candidate.next
            cur_node.next = None
            
            self.insertNode(start, cur_node)
        
        return start.next
    
    def insertNode(self, start, cur_node):
        p1 = start
        p2 = start.next
        
        while p2 != None:
            if p2.val <= cur_node.val:
                if p2.next == None:
                    p2.next = cur_node
                    return
                p1 = p1.next
                p2 = p2.next
                continue
            elif p2.val > cur_node.val:
                p1.next = cur_node
                cur_node.next = p2
                return
            
            
            
            
            
        
